# OpenEMR Monitoring Configuration Example
# Copy this file to openemr-monitoring.conf and customize as needed
# The install-monitoring.sh script will automatically load this configuration

# =============================================================================
# NAMESPACE CONFIGURATION
# =============================================================================
# Customize namespaces for different environments
MONITORING_NAMESPACE="monitoring"
OPENEMR_NAMESPACE="openemr"
OBSERVABILITY_NAMESPACE="observability"

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================
# Primary storage class for monitoring components (ReadWriteOnce)
STORAGE_CLASS_RWO="gp3-monitoring-encrypted"

# Optional: ReadWriteMany storage class (e.g., for shared storage)
# STORAGE_CLASS_RWX="efs-sc"

# Access modes (auto-detected if not specified)
ACCESS_MODE_RWO="ReadWriteOncePod"
ACCESS_MODE_RWX="ReadWriteMany"

# =============================================================================
# CHART VERSIONS (pinned for stability)
# =============================================================================
# These versions are tested and known to work together
CHART_KPS_VERSION="78.3.2"      # kube-prometheus-stack
CHART_LOKI_VERSION="6.43.0"     # Loki stack
CHART_JAEGER_VERSION="3.4.1"    # Jaeger

# =============================================================================
# TIMEOUTS AND RETRIES
# =============================================================================
# Adjust these based on your cluster performance
TIMEOUT_HELM="30m"              # Helm operation timeout
TIMEOUT_KUBECTL="600s"          # kubectl wait timeout
MAX_RETRIES="3"                 # Maximum retry attempts
BASE_DELAY="30"                 # Base delay between retries (seconds)
MAX_DELAY="300"                 # Maximum delay between retries (seconds)

# =============================================================================
# INGRESS CONFIGURATION (optional)
# =============================================================================
# Enable NGINX ingress for external access to Grafana
ENABLE_INGRESS="0"              # Set to "1" to enable

# Required if ENABLE_INGRESS="1"
GRAFANA_HOSTNAME=""             # e.g., "grafana.example.com"

# TLS configuration
TLS_SECRET_NAME=""              # Leave empty for auto-generated self-signed cert

# Basic authentication (only works with NGINX ingress)
ENABLE_BASIC_AUTH="0"           # Set to "1" to enable
BASIC_AUTH_USER="admin"         # Basic auth username
BASIC_AUTH_PASSWORD=""          # Leave empty for auto-generated password

# =============================================================================
# ALERTMANAGER SLACK INTEGRATION (optional)
# =============================================================================
# Configure Slack notifications for alerts
SLACK_WEBHOOK_URL=""            # Slack webhook URL (must start with https://hooks.slack.com/)
SLACK_CHANNEL=""                # Slack channel (e.g., "#openemr-alerts")

# Example Slack configuration:
# SLACK_WEBHOOK_URL="https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX"
# SLACK_CHANNEL="#openemr-alerts"

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Enable/disable file logging
ENABLE_LOG_FILE="1"             # Set to "0" to disable file logging

# Log file location
LOG_FILE="./openemr-monitoring.log"

# Debug logging
DEBUG="0"                       # Set to "1" for verbose debug output

# =============================================================================
# DIRECTORY CONFIGURATION
# =============================================================================
# Customize storage directories
CREDENTIALS_DIR="./credentials"         # Secure credential storage
BACKUP_DIR="./backups"                  # Configuration backups
VALUES_FILE="./prometheus-values.yaml"  # Generated values file

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Development Environment:
# MONITORING_NAMESPACE="monitoring-dev"
# ENABLE_INGRESS="0"
# DEBUG="1"

# Production Environment with Slack:
# ENABLE_INGRESS="1"
# GRAFANA_HOSTNAME="grafana.yourdomain.com"
# ENABLE_BASIC_AUTH="1"
# SLACK_WEBHOOK_URL="https://hooks.slack.com/services/..."
# SLACK_CHANNEL="#production-alerts"

# Multi-Tenant Environment:
# MONITORING_NAMESPACE="monitoring-tenant1"
# OPENEMR_NAMESPACE="openemr-tenant1"
# GRAFANA_HOSTNAME="grafana-tenant1.example.com"

# =============================================================================
# SECURITY NOTES
# =============================================================================
# - Keep this file secure and don't commit sensitive values to version control
# - Use environment variables for sensitive data in CI/CD pipelines
# - Regularly rotate Slack webhook URLs and basic auth passwords
# - Monitor access to the credentials directory
# - Enable audit logging for compliance requirements
