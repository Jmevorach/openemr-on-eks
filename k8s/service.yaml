# =============================================================================
# OpenEMR LoadBalancer Service Configuration
# =============================================================================
# This service exposes OpenEMR through an AWS Network Load Balancer (NLB).
#
# SSL Configuration:
# - ACM Mode: SSL termination at NLB with re-encryption to pods
# - Self-signed Mode: SSL passthrough with termination at OpenEMR pods
#
# Load Balancer Features:
# - High availability across multiple AZs
# - Session affinity for consistent user experience
# - Health checks for automatic failover
# =============================================================================

apiVersion: v1
kind: Service
metadata:
  name: openemr-service
  namespace: openemr
  labels:
    app: openemr
    component: loadbalancer
  annotations:
    # AWS Load Balancer Controller annotations
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"                              # Network Load Balancer for Layer 4 routing
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"                # Public internet access
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "${BACKEND_PROTOCOL}"  # TCP or SSL based on SSL mode
    
    # SSL Configuration (conditionally enabled by deploy script)
    # These annotations are uncommented when SSL_CERT_ARN is provided
    # ACM SSL Mode: SSL termination at NLB with re-encryption to pods
#    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"  # Ports that use SSL
#    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "${SSL_CERT_ARN}"  # ACM certificate ARN
#    service.beta.kubernetes.io/aws-load-balancer-ssl-negotiation-policy: "ELBSecurityPolicy-TLS-1-2-2017-01"  # SSL policy
spec:
  type: LoadBalancer  # Create AWS Load Balancer
  ports:
  # HTTP Port 80
  # Used for health checks, internal communication, and HTTP redirects
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
    
  # HTTPS Port 443
  # SSL configuration depends on deployment mode:
  # - ACM Mode: SSL re-encryption (NLB terminates SSL, re-encrypts to pod)
  # - Self-signed Mode: SSL passthrough (OpenEMR pod terminates SSL)
  - name: https
    port: 443
    targetPort: 443
    protocol: TCP
    
  selector:
    app: openemr  # Route traffic to OpenEMR pods
    
  # Session Affinity Configuration
  # Ensures users stick to the same pod for consistent session management
  # Important for OpenEMR's session-based authentication and file uploads
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600  # 1 hour session persistence
