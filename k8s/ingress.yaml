apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: openemr-ingress
  namespace: openemr
  annotations:
    ingressClassName: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/certificate-arn: "${SSL_CERT_ARN}"
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTPS
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/healthcheck-path: /interface/login/login.php
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "30"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "3"
    alb.ingress.kubernetes.io/load-balancer-attributes: |
      idle_timeout.timeout_seconds=300,
      routing.http.drop_invalid_header_fields.enabled=true,
      routing.http.preserve_host_header.enabled=true,
      routing.http.x_amzn_tls_version_and_cipher_suite.enabled=true,
      routing.http.xff_client_port.enabled=true,
      access_logs.s3.enabled=true,
      access_logs.s3.bucket=${S3_BUCKET_NAME},
      access_logs.s3.prefix=alb-logs
    alb.ingress.kubernetes.io/wafv2-acl-arn: "${WAF_ACL_ARN}"
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: openemr-service
            port:
              number: 443
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: openemr-network-policy
  namespace: openemr
spec:
  podSelector:
    matchLabels:
      app: openemr
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 3306  # MySQL
    - protocol: TCP
      port: 6379  # Redis
    - protocol: TCP
      port: 443   # HTTPS
    - protocol: TCP
      port: 80    # HTTP
    - protocol: UDP
      port: 53    # DNS
