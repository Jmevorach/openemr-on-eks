repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: ["--multi"]
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-json
      - id: check-merge-conflict
      - id: debug-statements
      - id: detect-private-key
      - id: check-docstring-first
      - id: check-executables-have-shebangs

  # Python-specific hooks are included for future machine learning and analytics capabilities.
  # Any ML/analytics features will almost certainly be implemented in Python, so we enforce
  # Python best practices, code quality, and security from the start.
  - repo: https://github.com/psf/black
    rev: 25.9.0
    hooks:
      - id: black
        language_version: python3
        types: [python]

  - repo: https://github.com/pycqa/isort
    rev: 7.0.0
    hooks:
      - id: isort
        args: ["--profile", "black"]

  - repo: https://github.com/pycqa/flake8
    rev: 7.3.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503]

  - repo: https://github.com/pycqa/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        args: ["-r", ".", "-f", "json", "-o", "bandit-report.json"]
        exclude: ^(tests/|test_|.*_test\.py)

  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.103.0
    hooks:
      - id: terraform_fmt
      - id: terraform_validate


  - repo: https://github.com/koalaman/shellcheck-precommit
    rev: v0.11.0
    hooks:
      - id: shellcheck
        args: ["--severity=error"]

  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.45.0
    hooks:
      - id: markdownlint
        args: ["--fix", "--config", ".markdownlint.json"]

  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.1
    hooks:
      - id: yamllint
        args: ["-c", ".yamllint"]

  - repo: https://github.com/commitizen-tools/commitizen
    rev: v4.9.1
    hooks:
      - id: commitizen
        stages: [commit-msg]

  - repo: local
    hooks:
      - id: kubernetes-manifest-validate
        name: Kubernetes Manifest Validation
        entry: bash -c 'for file in k8s/*.yaml; do echo "Validating $file..."; python3 -c "import yaml; list(yaml.safe_load_all(open(\"$file\")))" || exit 1; done'
        language: system
        types: [yaml]
        pass_filenames: false

      - id: openemr-script-test
        name: OpenEMR Script Test
        entry: bash -c 'cd scripts && ./run-test-suite.sh -s script_validation'
        language: system
        types: [shell]
        pass_filenames: false
        stages: [manual]

ci:
  autofix_commit_msg: 'style: auto fixes from pre-commit hooks'
  autoupdate_commit_msg: 'ci: pre-commit autoupdate'
